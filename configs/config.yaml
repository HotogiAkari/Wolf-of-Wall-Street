# configs/config.yaml

# --- 默认实验组合 ---
defaults:
  - data: default
  - features: default
  - labeling: raw_return
  - model: lgbm
  - hpo: default
  - backtest: default
  - application: default
  - _self_

# --- 全局设定 ---
# 这部分参数定义了项目的基本环境和全局行为. 
global_settings:
  seed: 64                            # 全局随机种子. 用于保证所有涉及随机性的操作（如模型训练, 数据采样）的结果都可以被复现. 
  device: 'gpu'                       # 默认计算设备. 'gpu' 会优先使用 CUDA，如果不可用则自动切换到 'cpu'. 'cpu' 则强制使用 CPU. 
  num_cpu_cores_for_data: '4'         # 用于控制 NumPy/SciPy/Scikit-learn 底层计算库（如 MKL, OpenBLAS）使用的线程数
  # 核心目录路径
  model_dir: 'data/models'            # 存放所有已训练模型, scaler 和 IC 历史记录的主目录.
  hpo_log_dir: 'data/hpo_logs'        # HPO 结果日志的存放目录.
  l3_cache_dir: 'data/l3_cache'       # L3 预处理数据的缓存目录
  data_cache_dir: 'data/data_cache'   # 用于缓存从 API 下载的原始数据的目录，避免重复下载，加快后续运行速度. 
  output_dir: 'data/processed'        # 存放 L2（特征数据）和 L3（预处理数据）缓存的目录. 
  raw_ohlcv_cache_dir: 'raw_ohlcv'    # 在 data_cache_dir 下存放原始 OHLCV 数据的子目录名. 
  ic_history_file: 'ic_history.csv'   # 训练结束后，用于保存所有模型聚合后 IC 历史记录的文件名. 
  order_history_db: 'data/runtime_data/order_history.db' # 交易历史 SQLite 数据库的文件名，由 risk_manager 使用. 用于防止重复下单和追踪订单状态
  
  # 模型与版本控制
  num_model_versions_to_keep: 3       # 模型版本控制. 对于每只股票的每个模型，只保留最近的 N 个版本，旧版本会被自动清理. 
  use_lstm_globally: True             # 是否为股票训练LSTM模型(每只股票可以单独定义)
  use_tabtransformer_globally: True   # 是否为股票训练TabTransformer模型(每只股票可以单独定义)

  # API Token
  tushare_api_token: 'TUSHARE_TOKEN' # 请在这里填入Tushare Token
  
  # 核心目标与模型列表
  # 定义本次运行要训练的模型类型列表. 可以只写 ['lgbm'] 或 ['lstm'] 来单独训练某个模型. 
  models_to_train: ['lgbm', 'lstm', 'tabtransformer'] 
  # 定义 LGBM 分位数回归模型要预测的分位数. 0.5 代表中位数，是核心的点预测. 
  quantiles: [0.05, 0.5, 0.95]
  # 定义标签列（即预测目标）在 DataFrame 中的列名. 
  label_column: 'label_return'

# --- 3. 为 Hydra 预留的空配置组 ---
# Hydra 会将 defaults 中加载的内容填充到这里。
data: {}
features: {}
labeling: {}
model: {}
hpo: {}
backtest: {}
application: {}